# basic server setting
spring.application.name=AOD
spring.docker.compose.enabled=false
server.port=8080

# database setting for postgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/aodDB
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# database setting for h2
#spring.datasource.url=jdbc:h2:mem:moviesdb;DB_CLOSE_DELAY=-1
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

spring.h2.console.settings.web-allow-others=true

# jpa setting
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

# log setting
#logging.level.com.example.AOD=DEBUG
#logging.level.org.springframework=INFO
#logging.level.org.springframework.jdbc.core=INFO
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
#logging.file.name=cgv-crawler.log

# OpenAI API ?? (???? ??? ??)
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions

# ?? ??? ??
recommendation.traditional.max-items-per-category=10
recommendation.llm.max-tokens=1500
recommendation.llm.temperature=0.7
recommendation.llm.model=gpt-3.5-turbo

# ?? ??
spring.cache.type=simple
spring.cache.cache-names=traditional-recommendations,llm-recommendations

# Naver Login Datas
naver.id = ${NAVER_ID}
naver.pw = ${NAVER_PW}

# Netflix Login Datas
netflix.id = ${NETFLIX_ID}
netflix.pw = ${NETFLIX_PW}